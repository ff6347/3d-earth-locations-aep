{"name":"3d-earth-locations-aep","tagline":"This is the repo to my After Effects 3D Locations Tutorial","body":"#After Effects 3D Locations Tutorial  \r\nThis tutorial will show you how to use VC Element and Locations.jsx to create a Globe in 3D space with a geo marker and text overlay.  \r\n\r\n0 . Prerequisites\r\n- [AE CS 4+](http://www.adobe.com/products/aftereffects.html)  \r\n- [Videocopilot Element](https://www.videocopilot.net/products/element/)  \r\n- [Sublime Text 2](http://www.sublimetext.com)  \r\n- [Locations Script](http://aescripts.com/locations/)  \r\n- [AEMap Script](http://aescripts.com/aemap/)  \r\n- [Zorro Script](http://aescripts.com/zorro-the-layer-tagger/)  \r\n- (optional) [Optical Flares](https://www.videocopilot.net/products/opticalflares/) / [Knoll Light Factory](http://www.redgiantsoftware.com/products/all/knoll-light-factory/) / or other 3D flare generator  \r\n\r\n1 . Get the Data  \r\n- [Natural Earth](http://www.shadedrelief.com/natural3/pages/textures.html) by Tom Patterson  \r\n- NASA VIIRS [Earth At Night](http://earthobservatory.nasa.gov/NaturalHazards/view.php?id=79765)  \r\n- [VideoCopilot 3D Earth](http://www.videocopilot.net/blog/2012/08/free-earth-project-for-element-3d/)  \r\n- [Moon](http://www.celestiamotherlode.net/catalog/show_creator_details.php?creator_id=205) by Philip Iveic  \r\n- [Sun](http://www.celestiamotherlode.net/catalog/sol.php) by Frank Gregorio  \r\n- [US State Capitals Geocommos](http://geocommons.com/overlays/165342)  \r\n\r\n\r\n##For The Nerds  \r\n\r\n1. Create bigger normal Map  \r\n2. Get Geo Data from geoTiff  \r\n\r\n-----------------  \r\n\r\n###Normal Maps  \r\nUse [normal-map](https://github.com/sinisterchipmunk/normal-map) by sinisterchipmunk  \r\n> Command line tool and Ruby library for generating normal maps.  \r\n> Generates DOT3 bump maps, also known as normal maps, for use in 3D computing.  \r\nby sinisterchipmunk\r\nWorks fine! Cool thing.  \r\n[github Link](https://github.com/sinisterchipmunk/normal-map)  \r\nMAC Requirements  \r\nneeds XCode and Command Line Tools installed, [rmagick](http://rmagick.rubyforge.org) which needs [ImageMagick](http://www.imagemagick.org/script/index.php):\r\n    \r\n    sudo port install ImageMagick  \r\n\r\nthan  \r\n\r\n    sudo gem install rmagick  \r\n\r\n if the installation of ImageMagick fails it helped for me to fully uninstall zlib and jpeg using:    \r\n    \r\n    # clean out zlib  \r\n    port clean --all zlib  \r\n    sudo port clean --all zlib  \r\n    sudo port install zlib  \r\n    \r\n    # clean out jpeg\r\n    port clean --all jpeg  \r\n    sudo port clean --all jpeg  \r\n    sudo port install jpeg  \r\n\r\n\r\n###Geo Data from geoTiff  \r\n\r\nuse this python script readgeoinfo.py  \r\n\r\n\r\n    !/usr/bin/env python    \r\n    from sys import argv    \r\n    from osgeo import gdal    \r\n    filetoread = argv    \r\n    # print type(filetoread)    \r\n    ds = gdal.Open(filetoread[1])    \r\n    width = ds.RasterXSize    \r\n    height = ds.RasterYSize    \r\n    gt = ds.GetGeoTransform()    \r\n    minx = gt[0]    \r\n    miny = gt[3] + width * gt[4] + height * gt[5]    \r\n    maxx = gt[0] + width * gt[1] + height * gt[2]    \r\n    maxy = gt[3]\r\n    \r\n    if not gt is None:\r\n        print 'Origin = (', gt[0] , ',', gt[3] ,')'\r\n        print 'Pixel Size = (', gt[1] , ',', gt[5] , ')'\r\n        print ''\r\n        print 'min X = ',minx\r\n        print 'min Y = ', miny\r\n        print ''\r\n        print 'max X = ' , maxx\r\n        print 'max Y = ' , maxy\r\n\r\n","google":"UA-37487251-1","note":"Don't delete this file! It's used internally to help with page regeneration."}